# ============================================================
# Výchozí profil – běžné spuštění (např. proti Docker DB nebo už naimportované DB)
# Pro DEMO s auto-importem init.sql použij application-demo.properties (profil "demo").
# ============================================================

# --- Připojení k databázi (lokální/Docker) ---
spring.datasource.url=jdbc:mariadb://localhost:3306/projekt_pojistovna?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# --- JPA / Hibernate ---
# Výchozí nastavení NEMĚNÍ schéma.
# Pro čistý vývoj můžeš dočasně použít:
#  - update   – vytváří/aktualizuje tabulky dle entit (pohodlné, ale ne do produkce),
#  - validate – pouze ověří, že schéma odpovídá entitám,
#  - none     – nic nedělá (očekává existující schéma).
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false

# --- SQL inicializace ---
# Pokud používáš Docker Compose, import dumpu obvykle řeší sám DB container.
# Pro ruční import můžeš povolit:
# spring.sql.init.mode=always
# spring.sql.init.schema-locations=classpath:db/init.sql
# spring.sql.init.encoding=UTF-8
# spring.sql.init.continue-on-error=true

# --- Šablony / port (volitelné) ---
# spring.thymeleaf.cache=true
# server.port=8080
