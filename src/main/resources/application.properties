# ============================================================
# Výchozí profil ? b??né spu?t?ní (nap?. proti Docker DB nebo u? naimportované DB)
# Pro DEMO s auto-importem init.sql pou?ij application-demo.properties (profil "demo").
# ============================================================


# --- P?ipojení k databázi (lokální/Docker) ---

spring.datasource.url=jdbc:mariadb://localhost:3306/projekt_pojistovna?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver


# --- JPA / Hibernate ---

# Výchozí nastavení NEM?NÍ schéma.
# Pro ?istý vývoj m??e? do?asn? pou?ít:
#  - update   ? vytvá?í/aktualizuje tabulky dle entit (pohodlné, ale ne do produkce),
#  - validate ? pouze ov??í, ?e schéma odpovídá entitám,
#  - none     ? nic ned?lá (o?ekává existující schéma).
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false


# --- SQL inicializace ---

# Pokud pou?ívá? Docker Compose, import dumpu obvykle ?e?í sám DB container.
# Pro ru?ní import m??e? povolit:
# spring.sql.init.mode=always
# spring.sql.init.schema-locations=classpath:db/init.sql
# spring.sql.init.encoding=UTF-8
# spring.sql.init.continue-on-error=true


# --- ?ablony / port (volitelné) ---

# spring.thymeleaf.cache=true
# server.port=8080

